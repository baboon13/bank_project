// <auto-generated />
using bank_project.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace bank_project.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("bank_project.Models.LikeListData", b =>
                {
                    b.Property<int>("SN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SN");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SN"));

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Account");

                    b.Property<string>("OrderName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("OrderName");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TotalAmount");

                    b.Property<decimal?>("TotalFee")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TotalFee");

                    b.HasKey("SN");

                    b.HasIndex("Account");

                    b.ToTable("LikeListData");
                });

            modelBuilder.Entity("bank_project.Models.ProductData", b =>
                {
                    b.Property<string>("No")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("No");

                    b.Property<decimal>("FeeRate")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(5,4)")
                        .HasColumnName("Fee rate");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Price");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Product Name");

                    b.HasKey("No");

                    b.ToTable("ProductData");
                });

            modelBuilder.Entity("bank_project.Models.UserData", b =>
                {
                    b.Property<string>("UserID")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("UserID");

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Account");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Email");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("UserName");

                    b.Property<string>("password1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.HasIndex("Account")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("UserData");
                });

            modelBuilder.Entity("bank_project.Models.LikeListData", b =>
                {
                    b.HasOne("bank_project.Models.UserData", null)
                        .WithMany()
                        .HasForeignKey("Account")
                        .HasPrincipalKey("Account")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
